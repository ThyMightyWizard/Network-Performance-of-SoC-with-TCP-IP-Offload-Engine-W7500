int32_t recvonly_tcps(uint8_t sn, uint8_t* buf, uint16_t port)
{
     int32_t ret;
     uint16_t size = 0;
     int32_t i;
     switch(getSn_SR(sn))
     {
        case SOCK_ESTABLISHED :
           if(getSn_IR(sn) & Sn_IR_CON)
           {
              setSn_IR(sn,Sn_IR_CON);
           }
           // Don't need to check SOCKERR_BUSY because it doesn't not occur.
           if((size = getSn_RX_RSR(sn)) > 0) 
           {
              if(size > DATA_BUF_SIZE) size = DATA_BUF_SIZE;
              printf("---------------size :%d\r\n", size);
             ret = recv(sn, buf, size);                 
           }
           break;
        case SOCK_CLOSE_WAIT :
           if( (ret = listen(sn)) != SOCK_OK) return ret;
           break;
        case SOCK_CLOSED:
           if((ret = socket(sn, Sn_MR_TCP, port, Sn_MR_ND)) != sn) return ret;
           break;
        default:
           break;
     }
     return 1;
}
